Initial Configuration for Opensearch 2.14

The following recommended settings will allow you to:

    Bind OpenSearch to an IP or network interface on the host.
    Set initial and maximum JVM heap sizes.
    Define an environment variable that points to the bundled JDK.
    Configure your own TLS certificatesâ€”no third-party certificate authority (CA) is required. See detail in Opensearch documentation.
    Create an admin user with a custom password.

1. Set up OpenSearch in your environment

    $ sudo vi /etc/opensearch/opensearch.yml

    # Bind OpenSearch to the correct network interface. Use 0.0.0.0
    # to include all available interfaces or specify an IP address
    # assigned to a specific interface.
    network.host: 0.0.0.0
    
    # Unless you have already configured a cluster, you should set
    # discovery.type to single-node, or the bootstrap checks will
    # fail when you try to start the service.
    discovery.type: single-node
    
    # If you previously disabled the Security plugin in opensearch.yml,
    # be sure to re-enable it. Otherwise you can skip this setting.
    plugins.security.disabled: false

    $ vi /etc/opensearch/jvm.options

    -Xms4g
    -Xmx4g

2. Configure TLS. See Opensearch 2.14 installation documentation for the detail.

    $ cd /etc/opensearch

    $ sudo openssl genrsa -out root-ca-key.pem 2048

    $ sudo openssl req -new -x509 -sha256 -key root-ca-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=ROOT" -out root-ca.pem -days 730

    $ sudo openssl genrsa -out admin-key-temp.pem 2048

    $ sudo openssl pkcs8 -inform PEM -outform PEM -in admin-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out admin-key.pem

    $ sudo openssl req -new -key admin-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=A" -out admin.csr

    $ sudo openssl x509 -req -in admin.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out admin.pem -days 730

    $ sudo openssl genrsa -out node1-key-temp.pem 2048

    $ sudo openssl pkcs8 -inform PEM -outform PEM -in node1-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out node1-key.pem

    $ sudo openssl req -new -key node1-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=node1.dns.a-record" -out node1.csr

    $ sudo sh -c 'echo subjectAltName=DNS:node1.dns.a-record > node1.ext'

    $ sudo openssl x509 -req -in node1.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out node1.pem -days 730 -extfile node1.ext

    $ sudo rm -f *temp.pem *csr *ext

    $ sudo chown opensearch:opensearch admin-key.pem admin.pem node1-key.pem node1.pem root-ca-key.pem root-ca.pem root-ca.srl

    Write and run the following script. Make sure to comment out the lines in /etc/opensearch/opensearch.yml

    #! /bin/bash
    
    # Before running this script, make sure to replace the CN in the 
    # node's distinguished name with a real DNS A record.
    
    echo "plugins.security.ssl.transport.pemcert_filepath: /etc/opensearch/node1.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.transport.pemkey_filepath: /etc/opensearch/node1-key.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.transport.pemtrustedcas_filepath: /etc/opensearch/root-ca.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.http.enabled: true" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.http.pemcert_filepath: /etc/opensearch/node1.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.http.pemkey_filepath: /etc/opensearch/node1-key.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.ssl.http.pemtrustedcas_filepath: /etc/opensearch/root-ca.pem" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.allow_default_init_securityindex: true" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.authcz.admin_dn:" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "  - 'CN=A,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA'" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.nodes_dn:" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "  - 'CN=node1.dns.a-record,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA'" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.audit.type: internal_opensearch" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.enable_snapshot_restore_privilege: true" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.check_snapshot_restore_write_privileges: true" | sudo tee -a /etc/opensearch/opensearch.yml
    echo "plugins.security.restapi.roles_enabled: [\"all_access\", \"security_rest_api_access\"]" | sudo tee -a /etc/opensearch/opensearch.yml

3. Configure a user

    # cd /usr/share/opensearch/plugins/opensearch-security/tools

    # OPENSEARCH_JAVA_HOME=/usr/share/opensearch/jdk ./hash.sh

    **************************************************************************
    ** This tool will be deprecated in the next major release of OpenSearch **
    ** https://github.com/opensearch-project/security/issues/1755           **
    **************************************************************************
    [Password:] opensearchwd
    $2y$12$HazMtJclzrSU4yK17.u7P.5lp9mjRmhDnKSBQZuSzA2Kn.2F1IbCa

    $ sudo vi /etc/opensearch/opensearch-security/internal_users.yml

      internal:
        hash: "$2y$12$HazMtJclzrSU4yK17.u7P.5lp9mjRmhDnKSBQZuSzA2Kn.2F1IbCa"
        reserved: false
        backend_roles: []
        description: "New internal user"

4. Apply changes

    $ sudo systemctl restart opensearch

    Open another terminal window.

    # cd /usr/share/opensearch/plugins/opensearch-security/tools

    # OPENSEARCH_JAVA_HOME=/usr/share/opensearch/jdk ./securityadmin.sh -cd /etc/opensearch/opensearch-security/ -cacert /etc/opensearch/root-ca.pem -cert /etc/opensearch/admin.pem -key /etc/opensearch/admin-key.pem -icl -nhnv

            **************************************************************************
            ** This tool will be deprecated in the next major release of OpenSearch **
            ** https://github.com/opensearch-project/security/issues/1755           **
            **************************************************************************
            Security Admin v7
            Will connect to localhost:9200 ... done
            Connected as "CN=A,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA"
            OpenSearch Version: 2.14.0
            Contacting opensearch cluster 'opensearch' and wait for YELLOW clusterstate ...
            Clustername: opensearch
            Clusterstate: YELLOW
            Number of nodes: 1
            Number of data nodes: 1
            .opendistro_security index already exists, so we do not need to create one.
            Populate config from /etc/opensearch/opensearch-security/
            Will update '/config' with /etc/opensearch/opensearch-security/config.yml 
               SUCC: Configuration for 'config' created or updated
            Will update '/roles' with /etc/opensearch/opensearch-security/roles.yml 
               SUCC: Configuration for 'roles' created or updated
            Will update '/rolesmapping' with /etc/opensearch/opensearch-security/roles_mapping.yml 
               SUCC: Configuration for 'rolesmapping' created or updated
            Will update '/internalusers' with /etc/opensearch/opensearch-security/internal_users.yml 
               SUCC: Configuration for 'internalusers' created or updated
            Will update '/actiongroups' with /etc/opensearch/opensearch-security/action_groups.yml 
               SUCC: Configuration for 'actiongroups' created or updated
            Will update '/tenants' with /etc/opensearch/opensearch-security/tenants.yml 
               SUCC: Configuration for 'tenants' created or updated
            Will update '/nodesdn' with /etc/opensearch/opensearch-security/nodes_dn.yml 
               SUCC: Configuration for 'nodesdn' created or updated
            Will update '/whitelist' with /etc/opensearch/opensearch-security/whitelist.yml 
               SUCC: Configuration for 'whitelist' created or updated
            Will update '/audit' with /etc/opensearch/opensearch-security/audit.yml 
               SUCC: Configuration for 'audit' created or updated
            Will update '/allowlist' with /etc/opensearch/opensearch-security/allowlist.yml 
               SUCC: Configuration for 'allowlist' created or updated
            SUCC: Expected 10 config types for node {"updated_config_types":["allowlist","tenants","rolesmapping","nodesdn","audit","roles","whitelist","actiongroups","config","internalusers"],"updated_config_size":10,"message":null} is 10 (["allowlist","tenants","rolesmapping","nodesdn","audit","roles","whitelist","actiongroups","config","internalusers"]) due to: null
            Done with success
            
5. Verify that the service is running

    # curl https://localhost:9200 -u admin:OpenSearch-v2-14-1! -k
    {
      "name" : "u2404",
      "cluster_name" : "opensearch",
      "cluster_uuid" : "FQrl6iZHSwuCrPla3fBqSg",
      "version" : {
        "distribution" : "opensearch",
        "number" : "2.14.0",
        "build_type" : "deb",
        "build_hash" : "aaa555453f4713d652b52436874e11ba258d8f03",
        "build_date" : "2024-05-09T18:50:48.052504416Z",
        "build_snapshot" : false,
        "lucene_version" : "9.10.0",
        "minimum_wire_compatibility_version" : "7.10.0",
        "minimum_index_compatibility_version" : "7.0.0"
      },
      "tagline" : "The OpenSearch Project: https://opensearch.org/"
    }

